version: '3'

services:

  zookeeper:
    image: damdamdeo/debezium-zookeeper-prometheus-exporter:1.4.1.Final
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
      - 7074:8081
    environment:
      - LOG_LEVEL=WARN
      - SERVER_JVMFLAGS=-javaagent:/jmx_prometheus_javaagent.jar=8081:/config.yml

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"

  elasticsearch-exporter:
    image: justwatch/elasticsearch_exporter:1.1.0
    ports:
      - 9114:9114
    command:
      - '--es.uri=http://elasticsearch:9200'

  logstash:
    image: damdamdeo/logstash-oss-prometheus-exporter:6.8.2
    volumes:
      - $HOME/pipelines:/usr/share/logstash/pipeline:z
    ports:
      - 12201:12201/udp
      - 5000:5000
      - 9600:9600
      - 7075:8080
    environment:
      - LS_JAVA_OPTS=-javaagent:/jmx_prometheus_javaagent.jar=8080:/config.yml

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.8.2
    ports:
      - 5601:5601

# use cadvisor to expose mailhog container metrics. In a k8s env not needed as pod are already monitored
# TODO exporter kibana

  kafka:
    image: debezium/kafka:1.4.1.Final
    ports:
      - 9092:9092
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - CREATE_TOPICS=event:3:1:compact # 3 partitions 1 replica
      - KAFKA_LOG_RETENTION_MS=5000
      - KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS=5000
      - LOG_LEVEL=WARN
      - KAFKA_OPTS=

  kafka-exporter:
    image: danielqsj/kafka-exporter:v1.2.0
    ports:
      - 9308:9308
    environment:
      - kafka.server=kafka:9092

  connect:
    image: damdamdeo/debezium-connect-prometheus-exporter:1.4.1.Final
    ports:
      - 8083:8083
      - 7073:8080
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
      - LOG_LEVEL=WARN
      - EXTRA_ARGS=-javaagent:/jmx_prometheus_javaagent.jar=8080:/config.yml

  # https://debezium.io/documentation/reference/connectors/postgresql.html#postgresql-monitoring

  mutable:
    image: dcdh1983/postgresql-10-debezium-centos7:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USER=postgresuser
      - POSTGRESQL_PASSWORD=postgrespassword
      - POSTGRESQL_DATABASE=mutable

  mutable-exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    ports:
    - 9187:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://postgresuser:postgrespassword@mutable:5432/mutable?sslmode=disable

  todo-query:
    image: postgres:11-alpine
    ports:
      - 5433:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo-query

  todo-query-exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    ports:
      - 9188:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@todo-query:5432/todo-query?sslmode=disable

  todo-email-notifier:
    image: postgres:11-alpine
    ports:
      - 5434:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=todo-email-notifier

  todo-email-notifier-exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    ports:
      - 9189:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@todo-email-notifier:5432/todo-email-notifier?sslmode=disable

  secret-store:
    image: debezium/postgres:11-alpine
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=secret-store

  secret-store-exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    ports:
      - 9190:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@secret-store:5432/secret-store?sslmode=disable

  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - 1025:1025
      - 8025:8025

# use cadvisor to expose mailhog container metrics. In a k8s env not needed as pod are already monitored
# TODO exporter mailhog

  hazelcast:
    image: hazelcast/hazelcast:4.0.3
    ports:
      - 5701:5701
      - 8088:8080
    environment:
      - PROMETHEUS_PORT=8080

# TODO conf exporter

  todo-write-app:
    image: damdamdeo/todo-write-app:latest
    ports:
      - 8084:8080
    environment:
      - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0
        -Dmp.messaging.incoming.event-in.bootstrap.servers=kafka:9092
        -Dquarkus.datasource.jdbc.url=jdbc:postgresql://mutable:5432/mutable
        -Dquarkus.datasource.username=postgresuser
        -Dquarkus.datasource.password=postgrespassword
        -Dquarkus.datasource.secret-store.jdbc.url=jdbc:postgresql://secret-store:5432/secret-store
        -Dquarkus.datasource.secret-store.username=postgres
        -Dquarkus.datasource.secret-store.password=postgres
        -Dquarkus.datasource.mutable.jdbc.url=jdbc:postgresql://mutable:5432/mutable
        -Dquarkus.datasource.mutable.username=postgresuser
        -Dquarkus.datasource.mutable.password=postgrespassword
        -Dquarkus.datasource.consumed-events.jdbc.url=jdbc:postgresql://mutable:5432/mutable
        -Dquarkus.datasource.consumed-events.username=postgresuser
        -Dquarkus.datasource.consumed-events.password=postgrespassword
        -Dkafka-connector-api/mp-rest/url=http://connect:8083
        -Dconnector.mutable.database.hostname=mutable
        -Dconnector.mutable.database.username=postgresuser
        -Dconnector.mutable.database.password=postgrespassword
        -Dconnector.mutable.database.port=5432
        -Dconnector.mutable.database.dbname=mutable
        -Dconnector.mutable.nbOfPartitionsInEventTopic=3
        -Dquarkus.oidc.auth-server-url=http://keycloak:8080/auth/realms/todos
        -Dquarkus.jaeger.endpoint=http://jaeger:14268/api/traces
        -Dquarkus.jaeger.tags=env=local
        -Dquarkus.log.handler.gelf.enabled=true
        -Dquarkus.log.handler.gelf.host=logstash
        -Dquarkus.log.handler.gelf.port=12201
        -Dquarkus.log.handler.gelf.include-full-mdc=true
        -Dquarkus.log.handler.gelf.additional-field.env.value=local
        -Dquarkus.log.handler.gelf.additional-field.env.type=String
        -Dquarkus.log.handler.gelf.additional-field.serviceName.value=todo-write-app
        -Dquarkus.log.handler.gelf.additional-field.serviceName.type=String
        -Dquarkus.hazelcast-client.cluster-name=dev
        -Dquarkus.hazelcast-client.cluster-members=hazelcast:5701
        -Xmx128m
        -Xms128m

  todo-query-app:
    image: damdamdeo/todo-query-app:latest
    ports:
      - 8085:8080
    environment:
      - JAVA_OPTIONS=-Dquarkus.http.host=0.0.0.0
        -Dmp.messaging.incoming.event-in.bootstrap.servers=kafka:9092
        -Dquarkus.datasource.jdbc.url=jdbc:postgresql://todo-query:5432/todo-query
        -Dquarkus.datasource.username=postgres
        -Dquarkus.datasource.password=postgres
        -Dquarkus.datasource.secret-store.jdbc.url=jdbc:postgresql://secret-store:5432/secret-store
        -Dquarkus.datasource.secret-store.username=postgres
        -Dquarkus.datasource.secret-store.password=postgres
        -Dquarkus.datasource.consumed-events.jdbc.url=jdbc:postgresql://todo-query:5432/todo-query
        -Dquarkus.datasource.consumed-events.username=postgres
        -Dquarkus.datasource.consumed-events.password=postgres
        -Dquarkus.oidc.auth-server-url=http://keycloak:8080/auth/realms/todos
        -Dquarkus.jaeger.endpoint=http://jaeger:14268/api/traces
        -Dquarkus.jaeger.tags=env=local
        -Dquarkus.log.handler.gelf.enabled=true
        -Dquarkus.log.handler.gelf.host=logstash
        -Dquarkus.log.handler.gelf.port=12201
        -Dquarkus.log.handler.gelf.include-full-mdc=true
        -Dquarkus.log.handler.gelf.additional-field.env.value=local
        -Dquarkus.log.handler.gelf.additional-field.env.type=String
        -Dquarkus.log.handler.gelf.additional-field.serviceName.value=todo-query-app
        -Dquarkus.log.handler.gelf.additional-field.serviceName.type=String

  todo-email-notifier-app:
    image: damdamdeo/todo-email-notifier-app:latest
    environment:
      - JAVA_OPTIONS=-Dmp.messaging.incoming.event-in.bootstrap.servers=kafka:9092
        -Dquarkus.datasource.secret-store.jdbc.url=jdbc:postgresql://secret-store:5432/secret-store
        -Dquarkus.datasource.secret-store.username=postgres
        -Dquarkus.datasource.secret-store.password=postgres
        -Dquarkus.datasource.consumed-events.jdbc.url=jdbc:postgresql://todo-email-notifier:5432/todo-email-notifier
        -Dquarkus.datasource.consumed-events.username=postgres
        -Dquarkus.datasource.consumed-events.password=postgres
        -Dquarkus.mailer.host=mailhog
        -Dquarkus.mailer.username=
        -Dquarkus.mailer.password=
        -Dquarkus.log.handler.gelf.enabled=true
        -Dquarkus.log.handler.gelf.host=logstash
        -Dquarkus.log.handler.gelf.port=12201
        -Dquarkus.log.handler.gelf.include-full-mdc=true
        -Dquarkus.log.handler.gelf.additional-field.env.value=local
        -Dquarkus.log.handler.gelf.additional-field.env.type=String
        -Dquarkus.log.handler.gelf.additional-field.serviceName.value=todo-email-notifier-app
        -Dquarkus.log.handler.gelf.additional-field.serviceName.type=String

  todo-public-frontend-app:
    image: damdamdeo/todo-public-frontend-app:latest
    ports:
      - 8086:8080
    environment:
      - JAVA_OPTIONS=-Dtodo-write-api/mp-rest/url=http://todo-write-app:8080
        -Dtodo-query-api/mp-rest/url=http://todo-query-app:8080
        -Dquarkus.oidc.auth-server-url=http://keycloak:8080/auth/realms/todos
        -Dkeycloak-api/mp-rest/url=http://keycloak:8080/auth/realms/todos
        -Dkeycloak.admin.clientId=admin-cli
        -Dkeycloak.admin.username=keycloak
        -Dkeycloak.admin.password=keycloak
        -Dquarkus.http.cors=true
        -Dquarkus.http.cors.origins=http://localhost:8086,http://127.0.0.1:8086,http://localhost:4200,http://127.0.0.1:4200
        -Dquarkus.jaeger.endpoint=http://jaeger:14268/api/traces
        -Dquarkus.jaeger.tags=env=local
        -Dquarkus.log.handler.gelf.enabled=true
        -Dquarkus.log.handler.gelf.host=logstash
        -Dquarkus.log.handler.gelf.port=12201
        -Dquarkus.log.handler.gelf.include-full-mdc=true
        -Dquarkus.log.handler.gelf.additional-field.env.value=local
        -Dquarkus.log.handler.gelf.additional-field.env.type=String
        -Dquarkus.log.handler.gelf.additional-field.serviceName.value=todo-public-frontend-app
        -Dquarkus.log.handler.gelf.additional-field.serviceName.type=String

  keycloak-db:
    image: debezium/postgres:11-alpine
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
      - POSTGRES_DB=keycloak

  keycloak-db-exporter:
    image: wrouesnel/postgres_exporter:v0.8.0
    ports:
      - 9191:9187
    environment:
      - DATA_SOURCE_NAME=postgresql://keycloak:keycloak@keycloak-db:5432/keycloak?sslmode=disable

  # metrics are exported following https://github.com/aerogear/keycloak-metrics-spi
  # Warnings: manual setup have to be performed regarding master realm
  keycloak:
    image: damdamdeo/todo-keycloak:latest
    ports:
      - 8087:8080
    environment:
      - KEYCLOAK_USER=keycloak
      - KEYCLOAK_PASSWORD=keycloak
      - DB_VENDOR=postgres
      - DB_ADDR=keycloak-db:5432
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=keycloak

# flûte je devrais utiliser zipkin (car un exporter existe au lieu de jaeger ...)

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268

# TODO change jaeger to zipkin and export zipkin

  # https://prometheus:io/docs/instrumenting/exporters/:

  prometheus:
    image: prom/prometheus:v2.21.0
    ports:
      - 9090:9090
    volumes:
      - $HOME/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=365d'

# TODO exporter prometheus

  grafana:
    image: grafana/grafana:7.2.1
    ports:
      - 3000:3000
    environment:
    # metrics are exported by default. See https://grafana.com/docs/grafana/latest/administration/metrics/
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
    volumes:
      - $HOME/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - $HOME/grafana/dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
