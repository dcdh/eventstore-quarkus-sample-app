apiVersion: v1
kind: Template
labels:
  template: neo4j-persistent-template
message: |-
  The following service(s) have been created in your project: ${NEO4J_INSTANCE_SERVICE_NAME}.

         Username/Password: ${NEO4J_AUTH}
    Neo4J Instance Name: ${NEO4J_INSTANCE_SERVICE_NAME}
   Connection URL: bolt://${NEO4J_INSTANCE_SERVICE_NAME}:7687
metadata:
  annotations:
    description: |-
      Neo4J instance service, with persistent storage.

      NOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.
    openshift.io/display-name: Neo4J
    openshift.io/long-description: This template provides a standalone Neo4J server.  The instance is stored on persistent storage.  The instance name, username, and password are chosen via parameters when provisioning this service.
    openshift.io/provider-display-name: Damdamdeo.
    tags: neo4j,persistent,statefulset
  name: neo4j-persistent
objects:
- apiVersion: v1
  kind: Service
  metadata:
    name: "${NEO4J_INSTANCE_SERVICE_NAME}"
    labels:
      app: "${NEO4J_INSTANCE_SERVICE_NAME}"
  spec:
    ports:
    - port: 7687
      name: bolt
    - port: 7474
      name: http
    clusterIP: None
    selector:
      app: "${NEO4J_INSTANCE_SERVICE_NAME}"
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: "${NEO4J_INSTANCE_SERVICE_NAME}"
  spec:
    serviceName: "${NEO4J_INSTANCE_SERVICE_NAME}"
    replicas: 1
    selector:
      matchLabels:
        app: "${NEO4J_INSTANCE_SERVICE_NAME}"
    template:
      metadata:
        labels:
          app: "${NEO4J_INSTANCE_SERVICE_NAME}"
      spec:
        containers:
        - name: "${NEO4J_INSTANCE_SERVICE_NAME}"
          env:
          - name: NEO4J_AUTH
            value: ${NEO4J_AUTH}
          - name: NEO4J_dbms_connector_bolt_address
            value: 0.0.0.0:7687
          image: neo4j:3.5.14
          ports:
          - containerPort: 7687
            name: bolt
          - containerPort: 7474
            name: http
          livenessProbe:
            httpGet:
              path: /
              port: 7474
            initialDelaySeconds: 10
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 7474
            initialDelaySeconds: 5
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - name: "${NEO4J_INSTANCE_SERVICE_NAME}-data"
            mountPath: /var/lib/neo4j/data
    volumeClaimTemplates:
    - metadata:
        name: "${NEO4J_INSTANCE_SERVICE_NAME}-data"
        annotations:
          volume.alpha.kubernetes.io/storage-class: anything
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: "${VOLUME_CAPACITY}"
parameters:
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  required: true
  value: 512Mi
- description: The OpenShift Namespace where the ImageStream resides.
  displayName: Namespace
  name: NAMESPACE
  value: openshift
- description: The name of the OpenShift Service exposed for the neo4J instance.
  displayName: Neo4J Instance Service Name
  name: NEO4J_INSTANCE_SERVICE_NAME
  required: true
  value: neo4j
- description: Neo4J user authentication using this pattern username/password, e.g. neo4j/secret
  displayName: Neo4J User Authentication
  name: NEO4J_AUTH
  required: true
  value: neo4j/secret
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: 1Gi

